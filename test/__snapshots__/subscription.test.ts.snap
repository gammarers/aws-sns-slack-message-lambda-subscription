// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Subscription Testing Should match snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "SNSSlackMessageLambdaSubscription5EE4F2B8": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionA36ABB02",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SNSSlackMessageLambdaSubscriptionLambdaExecutionRoleC5480D3F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "secretsmanager:GetSecretValue",
                  "Effect": "Allow",
                  "Resource": "arn:aws:secretsmanager:us-east-1:123456789012:secret:slak-webhook*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "get-secret-policy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionA36ABB02": {
      "DependsOn": [
        "SNSSlackMessageLambdaSubscriptionLambdaExecutionRoleC5480D3F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "HASH.zip",
        },
        "Description": "Send Slack message function",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PARAMETERS_SECRETS_EXTENSION_CACHE_ENABLED": "true",
            "PARAMETERS_SECRETS_EXTENSION_CACHE_SIZE": "500",
            "PARAMETERS_SECRETS_EXTENSION_HTTP_PORT": "2773",
            "PARAMETERS_SECRETS_EXTENSION_LOG_LEVEL": "info",
            "PARAMETERS_SECRETS_EXTENSION_MAX_CONNECTIONS": "3",
            "SECRETS_MANAGER_TIMEOUT_MILLIS": "0",
            "SECRETS_MANAGER_TTL": "300",
            "SLACK_WEBOOK_SECRET_NAME": "slak-webhook",
            "SSM_PARAMETER_STORE_TIMEOUT_MILLIS": "0",
            "SSM_PARAMETER_STORE_TTL": "300",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          "arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension-Arm64:4",
        ],
        "LoggingConfig": {
          "ApplicationLogLevel": "INFO",
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionLogGroup791AC086",
          },
          "SystemLogLevel": "INFO",
        },
        "Role": {
          "Fn::GetAtt": [
            "SNSSlackMessageLambdaSubscriptionLambdaExecutionRoleC5480D3F",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionInvokeFunctionFromSNS7E7D00CD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionA36ABB02",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionLogGroup791AC086": {
      "DeletionPolicy": "RetainExceptOnCreate",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "TopicBFC7AF6E": {
      "Properties": {
        "TopicName": "example-topic",
      },
      "Type": "AWS::SNS::Topic",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
